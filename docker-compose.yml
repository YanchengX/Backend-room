version: '3.8'

services:

 roomapp:
  build:
   context: .
   dockerfile: Dockerfile
  image: room_php
  container_name: roomapp
  restart: unless-stopped
  tty: true
  working_dir: /var/www
  volumes:
   - ./:/var/www
  networks:
   - room-net

 roomweb:
  image: nginx
  container_name: roomweb
  restart: unless-stopped
  tty: true
  ports:
   - "88:80"
   - "445:443"
  volumes:
   - ./:/var/www
   - ./nginx/conf.d:/etc/nginx/conf.d
  networks:
   - room-net

 roomdb:
  image: mysql:8
  container_name: roomdb
  restart: unless-stopped
  tty: true
  ports:
   - "3307:3306"
  environment:
   #follow docker compose file match with .env then get sensitive value
   MYSQL_DATABASE: ${DB_DATABASE}
   MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
  volumes:
   - ./storage/mysql:/var/lib/mysql
  networks:
   - room-net
  
 roomredis:
  image: redis:7.2-rc3-alpine3.18
  container_name: roomredis
  restart: unless-stopped
  tty: true
  ports:
   - "6380:6379"
  networks:
   - room-net

 drone-server:
  image: drone/drone:2
  container_name: drone-server
  ports:
   - 89:80
   - 449:443
  restart: always
  volumes:
   - ./drone:/data
  environment:
   DRONE_GITHUB_CLIENT_ID: 0bcd44dc5f53c2b8e295
   DRONE_GITHUB_CLIENT_SECRET: 33c0c53e858181cc653d8aec22e5d3daa682c2f6
   DRONE_RPC_SECRET: a72e5b4e35f612dfd9bb6b0508f00cef
   DRONE_SERVER_HOST: 757b-2001-b011-8010-304c-18dc-57c9-e884-6ac8.ngrok-free.app
   DRONE_SERVER_PROTO: https
   DRONE_LOGS_DEBUG: 'true'
   DRONE_LOGS_TRACE: 'true'

 drone-runner:
  image: drone/drone-runner-docker:1
  container_name: drone-runner
  ports:
   - 3000:3000
  restart: always
  depends_on:
    - drone-server
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  environment:
   DRONE_RPC_HOST: 757b-2001-b011-8010-304c-18dc-57c9-e884-6ac8.ngrok-free.app
   DRONE_RPC_PROTO: https
   DRONE_RPC_SECRET: a72e5b4e35f612dfd9bb6b0508f00cef
   DRONE_RUNNER_CAPACITY: 2
   DRONE_RUNNER_NAME: drone-runner 
   DRONE_LOGS_TRACE: 'true'

networks:
 room-net:
  driver: bridge
